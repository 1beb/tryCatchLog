% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tryCatchLog.R
\name{tryLog}
\alias{tryLog}
\title{Try an expression with condition logging and error recovery}
\usage{
tryLog(expr,
  dump.errors.to.file = getOption("tryCatchLog.dump.errors.to.file", FALSE))
}
\arguments{
\item{expr}{expression to be evaluated}

\item{dump.errors.to.file}{if TRUE: Saves a dump of the workspace and the call stack named \code{dump_<YYYYMMDD_HHMMSS>.rda}}
}
\value{
The value of the expression (if \code{expr} is evaluated without an error.\cr
        In case of an error: An invisible object of the class \code{"try-error"} containing the error message
        and error condition as the \code{"condition"} attribute.
}
\description{
\code{tryLog} is a wrapper function around \code{\link{tryCatchLog}} to run an expression that might fail.
It traps any errors that occur during the evaluation without stopping the execution of the script.
Errors, warnings and messages are logged.
}
\details{
\code{tryLog} is implemented using \code{tryCatchLog}. If you need need more flexibility for
         catching and handling errors use the latter.
         Error messages are never printed to the \code{stderr} connection but logged only.
}
\examples{
tryLog(log(-1))   # logs a warning
tryLog(log("a"))  # logs an error
}
\seealso{
\code{\link{tryCatchLog}}
}

